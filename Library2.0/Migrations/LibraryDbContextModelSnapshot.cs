// <auto-generated />
using System;
using Library2._0.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Library2._0.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    partial class LibraryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Library2._0.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmountOfThisBook")
                        .HasColumnType("int");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Avaliable")
                        .HasColumnType("bit");

                    b.Property<string>("ImageThmbnailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Langugage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReleaseYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AmountOfThisBook = 5,
                            Author = "Zlatan Ibrahimovic, David Lagercrantz",
                            Avaliable = true,
                            ImageThmbnailUrl = "\\images\\jag-ar-zlatan-ibrahimovic-min-historia.jpg",
                            Langugage = "English",
                            ReleaseYear = "2019",
                            Title = "Jag är Zlatan Ibrahimovic: Min historia"
                        },
                        new
                        {
                            BookId = 2,
                            AmountOfThisBook = 4,
                            Author = "Camilla Läckberg",
                            Avaliable = false,
                            ImageThmbnailUrl = "\\images\\en-bur-av-guld.jpg",
                            Langugage = "Swedish",
                            ReleaseYear = "2020",
                            Title = "En bur av guld"
                        },
                        new
                        {
                            BookId = 3,
                            AmountOfThisBook = 2,
                            Author = "Camilla Läckberg",
                            Avaliable = false,
                            ImageThmbnailUrl = "\\images\\vingar-av-silver.jpg",
                            Langugage = "Swedish",
                            ReleaseYear = "2021",
                            Title = "Vingar av silver"
                        },
                        new
                        {
                            BookId = 4,
                            AmountOfThisBook = 1,
                            Author = "Camilla Läckberg",
                            Avaliable = false,
                            ImageThmbnailUrl = "\\images\\gokungen.jpg",
                            Langugage = "Swedish",
                            ReleaseYear = "2022",
                            Title = "Gökungen"
                        },
                        new
                        {
                            BookId = 5,
                            AmountOfThisBook = 2,
                            Author = "Camilla Läckberg",
                            Avaliable = false,
                            ImageThmbnailUrl = "\\images\\isprinsessan.jpg",
                            Langugage = "Swedish",
                            ReleaseYear = "2017",
                            Title = "Isprinsessan"
                        },
                        new
                        {
                            BookId = 6,
                            AmountOfThisBook = 1,
                            Author = "Camilla Läckberg",
                            Avaliable = false,
                            ImageThmbnailUrl = "\\images\\lejontamjaren.jpg",
                            Langugage = "Swedish",
                            ReleaseYear = "2017",
                            Title = "Lejontämjaren"
                        },
                        new
                        {
                            BookId = 7,
                            AmountOfThisBook = 4,
                            Author = "Isabella Löwengrip",
                            Avaliable = false,
                            ImageThmbnailUrl = "\\images\\isabella.jpg",
                            Langugage = "Swedish",
                            ReleaseYear = "2022",
                            Title = "Isabella"
                        });
                });

            modelBuilder.Entity("Library2._0.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Address = "Prestbury Square",
                            City = "New York",
                            FirstName = "Jay",
                            LastName = "Duffy",
                            PhoneNumber = "123456789",
                            ZipCode = "223345"
                        },
                        new
                        {
                            CustomerId = 2,
                            Address = "Fifth Avenue",
                            City = "New York",
                            FirstName = "Emma",
                            LastName = "Madison",
                            PhoneNumber = "684747382",
                            ZipCode = "347363"
                        },
                        new
                        {
                            CustomerId = 3,
                            Address = "Rodeo Drive",
                            City = "Beverly Hills",
                            FirstName = "Cora",
                            LastName = "Ashley",
                            PhoneNumber = "094853213",
                            ZipCode = "586732"
                        },
                        new
                        {
                            CustomerId = 4,
                            Address = "Griffin Street",
                            City = "Phoenix",
                            FirstName = "Hayes",
                            LastName = "Robinson",
                            PhoneNumber = "084231496",
                            ZipCode = "850413"
                        });
                });

            modelBuilder.Entity("Library2._0.Models.LibraryLoan", b =>
                {
                    b.Property<int>("LoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DayOfLoan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DayOfReturn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReturned")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDayToReturn")
                        .HasColumnType("datetime2");

                    b.HasKey("LoanId");

                    b.HasIndex("BookId");

                    b.HasIndex("CustomerId");

                    b.ToTable("LibraryLoans");

                    b.HasData(
                        new
                        {
                            LoanId = 1,
                            BookId = 1,
                            CustomerId = 1,
                            DayOfLoan = new DateTime(2022, 9, 22, 15, 48, 54, 327, DateTimeKind.Local).AddTicks(1110),
                            DayOfReturn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsReturned = false,
                            LastDayToReturn = new DateTime(2022, 10, 22, 15, 48, 54, 331, DateTimeKind.Local).AddTicks(1145)
                        },
                        new
                        {
                            LoanId = 2,
                            BookId = 2,
                            CustomerId = 1,
                            DayOfLoan = new DateTime(2022, 9, 22, 15, 48, 54, 331, DateTimeKind.Local).AddTicks(2120),
                            DayOfReturn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsReturned = false,
                            LastDayToReturn = new DateTime(2022, 10, 22, 15, 48, 54, 331, DateTimeKind.Local).AddTicks(2145)
                        },
                        new
                        {
                            LoanId = 3,
                            BookId = 2,
                            CustomerId = 2,
                            DayOfLoan = new DateTime(2022, 9, 22, 15, 48, 54, 331, DateTimeKind.Local).AddTicks(2207),
                            DayOfReturn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsReturned = false,
                            LastDayToReturn = new DateTime(2022, 10, 22, 15, 48, 54, 331, DateTimeKind.Local).AddTicks(2211)
                        },
                        new
                        {
                            LoanId = 4,
                            BookId = 7,
                            CustomerId = 2,
                            DayOfLoan = new DateTime(2022, 9, 22, 15, 48, 54, 331, DateTimeKind.Local).AddTicks(2242),
                            DayOfReturn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsReturned = false,
                            LastDayToReturn = new DateTime(2022, 10, 22, 15, 48, 54, 331, DateTimeKind.Local).AddTicks(2246)
                        },
                        new
                        {
                            LoanId = 5,
                            BookId = 6,
                            CustomerId = 3,
                            DayOfLoan = new DateTime(2022, 9, 22, 15, 48, 54, 331, DateTimeKind.Local).AddTicks(2274),
                            DayOfReturn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsReturned = false,
                            LastDayToReturn = new DateTime(2022, 10, 22, 15, 48, 54, 331, DateTimeKind.Local).AddTicks(2278)
                        },
                        new
                        {
                            LoanId = 6,
                            BookId = 7,
                            CustomerId = 3,
                            DayOfLoan = new DateTime(2022, 9, 22, 15, 48, 54, 331, DateTimeKind.Local).AddTicks(2308),
                            DayOfReturn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsReturned = false,
                            LastDayToReturn = new DateTime(2022, 10, 22, 15, 48, 54, 331, DateTimeKind.Local).AddTicks(2312)
                        },
                        new
                        {
                            LoanId = 7,
                            BookId = 3,
                            CustomerId = 4,
                            DayOfLoan = new DateTime(2022, 9, 22, 15, 48, 54, 331, DateTimeKind.Local).AddTicks(2337),
                            DayOfReturn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsReturned = false,
                            LastDayToReturn = new DateTime(2022, 10, 22, 15, 48, 54, 331, DateTimeKind.Local).AddTicks(2341)
                        },
                        new
                        {
                            LoanId = 8,
                            BookId = 2,
                            CustomerId = 2,
                            DayOfLoan = new DateTime(2022, 9, 22, 15, 48, 54, 331, DateTimeKind.Local).AddTicks(2366),
                            DayOfReturn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsReturned = false,
                            LastDayToReturn = new DateTime(2022, 10, 22, 15, 48, 54, 331, DateTimeKind.Local).AddTicks(2370)
                        });
                });

            modelBuilder.Entity("Library2._0.Models.LibraryLoan", b =>
                {
                    b.HasOne("Library2._0.Models.Book", "Book")
                        .WithMany("LibraryLoans")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library2._0.Models.Customer", "Customer")
                        .WithMany("LibraryLoans")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
